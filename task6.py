from datetime import datetime

#6.1 Написать функцию для записи строки в текстовый файл. 
#В качестве аргументов принимает расположение текстового файла, модификатор доступа, строку для записи. 
#Использовать менеджер контекста. Ничего не возвращает

def writing_to_file(x, s, mod='a'):
    f1=open(x, mod)
    f1.write(s)
    f1.close()
    
writing_to_file('14.txt','my_string')

#6.2 Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12), 
#и возвращающую время года, которому этот месяц принадлежит (зима, весна, лето или осень)

def season(num):
	d={1:'январь',2:'февраль',3:'март',4:'апрель',5:'май',6:'июнь',7:'июль',8:'август',9:'сентябрь',10:'октябрь',11:'ноябрь',12:'декабрь'}
	
	if num in range(1,13):
		return d[num]
num=int(input('введите число от 1 до 12'))
print(season(num))

#6.3 Написать функцию square, принимающую 1 аргумент — сторону квадрата, 
#и возвращающую 3 значения (кортеж значений): периметр квадрата, площадь квадрата и диагональ квадрата.

def square (x):
	return (x*4,x*x, x**0.5)
x = int(input('Введите число - сторону квадрата'))
print(square(x))

#6.4 Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых 
#(каждый год размер его вклада увеличивается на 10%. Эти деньги прибавляются к сумме вклада, 
#и на них в следующем году тоже будут проценты).
#Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.

def bank(a,years):
	return(a*(1.1)**years)
a = int(input('Введите число - сумму вклада'))
years = int(input('Введите число - срок вклада (количество лет)'))
print(bank(a,years))

#6.5 Написать декоратор, который будет выводить время выполнения декорируемой функции в консоль

def decorator (func):
	def inner():
		 start=datetime.now()
		 result=func()
		 print (datetime.now()-start)
		 return result
	return inner
@decorator	
def f():
	print(list(range(1,100000)))
f()

